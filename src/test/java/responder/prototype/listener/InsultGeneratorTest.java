package responder.prototype.listener;
import net.dv8tion.jda.api.entities.User;
import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;


import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class InsultGeneratorTest{

    @Test
    public void botIgnoredTest() { //wait until a message is sent on discord

        MessageReceivedEvent event = mock(MessageReceivedEvent.class); //mocking the event object
        User user = mock(User.class); // mocking the user object
        when(user.isBot()).thenReturn(true); // setting up what each method should return
        when(event.getAuthor()).thenReturn(user);

        //ignore bot messages?
        //do not respond to other bots
        if (event.getAuthor().isBot()) {
            assertTrue(event.getAuthor().isBot());
            //
        }
    }
    @Test
    public void doNotIgnoreUsers() { //Does the bot acknowledge users beside bots

        MessageReceivedEvent event = mock(MessageReceivedEvent.class); //mocking the event object
        User user = mock(User.class); // mocking the user object
        when(user.isBot()).thenReturn(true); // setting up what each method should return
        when(event.getAuthor()).thenReturn(user);

        //when the vent is not generated by a bot
        if (!(event.getAuthor().isBot())) {
            assertFalse(event.getAuthor().isBot());
            //
        }
    }

    @Test
    public void canReadUserMessages() { //Does the bot actually read user input?

        MessageReceivedEvent event = mock(MessageReceivedEvent.class); //mocking the event object
        User user = mock(User.class); // mocking the user object
        when(user.isBot()).thenReturn(true); // setting up what each method should return
        when(event.getAuthor()).thenReturn(user);

        //acknowledge user messages and print them to console
        while (!(event.getAuthor().isBot())) {
            try {
                wait();
                String content = event.getMessage().getContentRaw();
                System.out.println(content);
                Boolean userSaidSomething= true;

                if(!(content.isEmpty())){
                    assertTrue(userSaidSomething);
                }

            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
                System.err.println("Thread Interrupted");
            }

            }
        }
    }
